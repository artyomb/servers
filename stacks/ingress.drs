Description <<~DCS
  Ingress
DCS

Labels 'stack.product': 'ingress'


Deploy traefik: { placement: { constraints: ['node.role == manager'] }, labels: [
       'traefik.http.middlewares.%{service-name}_auth.basicauth.users=admin:$$apr1$$i7hdbc9g$$Rkocxo9snhmuESvUg0TTv/',
       "traefik.http.routers.%{service-name}-0.middlewares=%{service-name}_auth"
       ] }

Options name: 'ingress', traefik: true, tls_domain: ENV['TRAEFIK_DOMAIN'], traefik_tls: true

Ingress traefik: { host: 'traefik.*', port: '8080' }

PublishPorts traefik: ['80:80', '443:443']

Service :traefik, image: 'traefik:v3.0.1' do
  # ports ['80:80', '443:443' ]
  command YAML.load <<~YAML
    - --core.defaultRuleSyntax=v2
    - --providers.swarm.endpoint=unix:///var/run/docker.sock
    - --providers.swarm.network=ingress-routing
    # service label 
    # "traefik.docker.lbswarm=true"
    # If you enable this option, Traefik will use the virtual IP provided by docker swarm instead of the containers IPs.
    # Which means that Traefik will not perform any kind of load balancing and will delegate this task to swarm.

    # --providers.docker
    # --provid.constraints=Label(\"traefik.enable\", \"true\")
    # --provideers.dockerrs.docker.network=ingress-routing
    # --providers.docker.swarmMode=true
    - --entrypoints.http.address=:80
    - --entrypoints.http.http.redirections.entryPoint.to=https
    - --entrypoints.http.http.redirections.entryPoint.scheme=https
    - --entrypoints.https.address=:443
    - --entrypoints.https.http.tls=true
    - --entrypoints.https.http.tls.certResolver=le
    - --certificatesresolvers.le.acme.email=default@gmail.com
    - --certificatesresolvers.le.acme.storage=/certificates/acme.json
    - --certificatesresolvers.le.acme.tlschallenge=true

    - --metrics.otlp=true
    - --metrics.otlp.addEntryPointsLabels=true
    - --metrics.otlp.addRoutersLabels=true
    - --metrics.otlp.addServicesLabels=true
    - --metrics.otlp.pushInterval=10s
    # - --metrics.otlp.http=true
    - --metrics.otlp.http.endpoint=https://otel.#{ENV['TRAEFIK_DOMAIN']}/v1/metrics
    # - --tracing.otlp.http.endpoint=https://otel.#{ENV['TRAEFIK_DOMAIN']}/v1/traces
    - --metrics.otlp.http.tls.insecureSkipVerify=true

    - --accesslog
    - --log
    - --api
    - --api.insecure=true
  YAML
  volume 'traefik_data:/certificates'
  volume 'traefik_data:/letsencrypt'
  volume '/var/run/docker.sock:/var/run/docker.sock'
end


Volume :traefik_data, name: 'traefik_data'
